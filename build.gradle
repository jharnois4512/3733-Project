/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */



buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
        }
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.3.16'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building an application
    id 'application'
    //id 'org.openjfx.javafxplugin' version '0.0.7'
}

configurations {
    extraLibs
}



dependencies {
    implementation 'com.google.guava:guava:27.0.1-jre'
    //implementation group: 'org.apache.derby',name: 'derby',version: '10.14.2.0'
    //implementation group: 'org.apache.derby',name: 'derbytools',version: '10.14.2.0'
    implementation 'com.jfoenix:jfoenix:8.0.8' // Java 8
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.0.5'

    implementation 'com.gluonhq:charm:5.0.2'
    implementation 'com.sendgrid:sendgrid-java:1.1.0'
    implementation group: 'com.twilio.sdk', name: 'twilio', version: '7.37.0'

    compile 'com.sendgrid:sendgrid-java:1.1.0'
    compile group: "com.twilio.sdk", name: "twilio", version: "7.37.0"
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.14'
    compile group: 'net.sf.sociaal', name: 'freetts', version: '1.2.2'
// https://mvnrepository.com/artifact/com.github.sarxos/webcam-capture
    compile group: 'com.github.sarxos', name: 'webcam-capture', version: '0.3.4'
    compile group: 'com.github.sarxos', name: 'webcam-capture-driver-jmf', version: '0.3.11'
    compile group: 'net.kurobako', name: 'gesturefx', version: '0.3.0'

    compile "com.gluonhq:charm-down-common:2.0.1"
    compile 'com.gluonhq:charm-down-ios:2.0.1'
    compile group: 'com.gluonhq', name: 'charm-down-core-ios', version: '3.8.6'

    compile group: 'com.github.goxr3plus', name: 'java-google-speech-api', version: '8.0.0'

    compile(files('Team-G-Food-Request.jar'))
    compile 'io.ably:ably-java:1.1.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    configurations.compile.extendsFrom(configurations.extraLibs)
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

compileJava {
    options.warnings = false
    options.deprecation = false
    options.compilerArgs += ["-Xdoclint:none", "-Xlint:none", "-nowarn", "-XDstringConcat=inline"]
    //options.bootClasspath = "$System.env.JDK8_HOME/jre/lib/rt.jar"
    //options.bootClasspath += "$File.pathSeparator$System.env.JDK8_HOME/jre/lib/jsse.jar"
    options.fork = true
    options.forkOptions.with {
        memoryMaximumSize = 34359738368
    }
}

//apply plugin: "org.openjfx.javafxplugin"
apply plugin: 'org.javafxports.jfxmobile'

group 'edu.wpi.cs3733.d19.teamM'

/*javafx {
    modules = [ 'javafx.base', 'javafx.fxml', 'javafx.graphics', 'javafx.media','javafx.swing','javafx.web','javafx.controls' ]
}*/



sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src']

// Define the main class for the application
mainClassName = 'edu.wpi.cs3733.d19.teamM.Main'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "edu.wpi.cs3733.d19.teamM.Main"
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jfxmobile {
    downConfig {
        version = '3.6.0'
        // Do not edit the line below. Use Gluon Mobile Settings in your project context menu instead
        //plugins 'display', 'lifecycle', 'statusbar', 'storage'
    }
    android {
        manifest = 'src/android/AndroidManifest.xml'
    }
    ios {
        //iosProvisioningProfile = '3733_Provisioning'
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.gluonhq.**.*',

                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'javafx.**.*',
                'org.glassfish.json.**.*',
                'edu.wpi.cs3733.d19.teamM.**.*',
                'SQLite.**.*',
                //'org.apache.derby.**.*',
                //'org.apache.derby.loc.*',
                'javax.**.*',
                'com.sun.**.*',
                'javax.xml.stream.FactoryFinder$ClassLoaderFinderConcrete',
                'javax.naming.directory.*',
                'javax.transaction.xa.*',
                'java.awt.**.*',
                'io.ably.**.*',
                'org.jfxtras.**.*',
                'nl.softwork.**.*',
                'org.msgpack.**.*',
        ]
    }
}